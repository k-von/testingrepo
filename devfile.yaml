schemaVersion: 2.1.0
metadata:
  name: sams-dev
projects:
  - name: sams-cola
    git:
      remotes:
        origin: "git@github.com:la-county-isd/sams-cola.git"
      checkoutFrom:
        revision: main
components:
  - name: app-server
    container:
      #image: registry.redhat.io/devspaces/udi-rhel8:3.9
      image: quay.io/kayvon77/ruby-dev:1.0
      memoryLimit: "2Gi"
      memoryRequest: "1Gi"
      cpuLimit: "1"
      cpuRequest: "0.5"
      mountSources: true
      endpoints:
        - exposure: public
          name: "sams-endpoint"
          targetPort: 3000
      env:
        - name: RAILS_ENV
          value: development
        - name: PROJECTROOT
          value: $(PROJECTS_ROOT)
        - name: DATABASE_URL
          value: mysql2://root:example@db:3306
        - name: MEMCACHED_HOST
          value: memcached
        - name: ELASTICSEARCH_URL
          value: http://127.0.0.1:9200
        - name: REDIS_URL
          value: redis://redis:6379
        - name: MAILDEV_HOST
          value: maildev
        - name: MINIO_ACCESS_KEY
          value: minio_development
        - name: MINIO_SECRET_KEY
          value: minio_development
        - name: MINIO_BUCKET
          value: secure-bucket
  - name: minio
    container:
      image: minio/minio:RELEASE.2019-05-14T23-57-45Z
      # memoryLimit: '2Gi'
      # memoryRequest: '1Gi'
      # cpuLimit: '1'
      # cpuRequest: '0.5'
      mountSources: false
      command:
        - minio
      args:
        - server
        - /data/disk0
      endpoints:
        - exposure: internal
          name: minio
          targetPort: 9000
      env:
        - name: CONFD_BACKEND
          value: env
        - name: CONFD_PREFIX_KEY
          value: /minio
        - name: MINIO_ACCESS_KEY
          value: minio_development
        - name: MINIO_SECRET_KEY
          value: minio_development
        - name: MINIO_DISKS_0
          value: disk0
        - name: MINIO_REGION
          value: us-east-1
        - name: MINIO_BUCKET
          value: secure-bucket
        - name: MC_CONFIG_DIR
          value: /tmp
  - name: es
    container:
      image: docker.elastic.co/elasticsearch/elasticsearch:7.16.2
      memoryLimit: "2Gi"
      memoryRequest: "1Gi"
      cpuLimit: "1"
      cpuRequest: "0.5"
      env:
        - name: ES_XPACK_SECURITY_ENABLED
          value: "false"
        - name: discovery.type
          value: single-node
        - name: ES_BOOTSTRAP_MEMORY_LOCK
          value: "false"
        - name: ES_JAVA_OPTS
          value: "-Xms512m -Xmx512m -Dlog4j2.formatMsgNoLookups=true"
        - name: ES_PATH_DATA
          value: /usr/share/elasticsearch/data
        - name: ES_PATH_LOGS
          value: /usr/share/elasticsearch/logs
      endpoints:
        - name: es
          targetPort: 9200
          protocol: tcp
          exposure: internal
  - name: db
    container:
      args:
        - --default-authentication-plugin=mysql_native_password
      image: mysql:8.0
      memoryLimit: "2Gi"
      memoryRequest: "1Gi"
      cpuLimit: "1"
      cpuRequest: "0.5"
      mountSources: false
      dedicatedPod: true
      env:
        - name: MYSQL_ROOT_PASSWORD
          value: example
        - name: MYSQL_DATABASE
          value: sams_development
        - name: MYSQL_USER
          value: sams
        - name: MYSQL_PASSWORD
          value: samspassword
      endpoints:
        - name: db
          targetPort: 3306
          protocol: tcp
          exposure: internal
events:
  postStart:
    - createbucket
commands:
  - id: justtesting
    exec:
      commandLine: /bin/bash -c 'echo "Just Testing"'
      component: app-server
  - id: createbucket
    exec:
      commandLine: |
        curl https://dl.min.io/client/mc/release/linux-amd64/mc \
        --create-dirs \
        -o /tmp/minio-binaries/mc && \
        chmod +x /tmp/minio-binaries/mc && \
        export PATH=$PATH:/tmp/minio-binaries/
        mc alias set myminio http://127.0.0.1:9000 minio_development minio_development && \
        mc mb myminio/secure-bucket

      component: minio
      label: Create Minio Bucket
      workingDir: /tmp
  - id: build
    exec:
      commandLine: /bin/bash --login -c 'rvm use system && ${PROJECT_SOURCE}/bin/bundle install --path vendor/bundle && npm i'
      component: app-server
      label: Build project
      group:
        kind: build
        isDefault: true
  - id: build-dev-tools
    exec:
      commandLine: |
        /bin/bash --login -c 'cd ${PROJECT_SOURCE}/dev-tools && rvm use 3.1.3 && bundle install'

      component: app-server
      group:
        kind: build
      label: Building dev-tools related gems
      workingDir: ${PROJECTS_ROOT}/sams-cola/dev-tools
  - id: delayed-jobs-server
    exec:
      commandLine: |
        /bin/bash --login -c 'rvm use system && ${PROJECT_SOURCE}/bin/bundle exec rake jobs:work'

      component: app-server
      group:
        kind: run
      label: Run delayed_jobs server for SAMS
      workingDir: ${PROJECTS_ROOT}/sams-cola
